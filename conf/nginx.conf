# user  nobody;                                                                # 使用的用户
worker_processes  2;                                                           # 开启的 work 进程数量
error_log         logs/error.log  info;                                        # 错误日志存储路径
pid               logs/nginx.pid;                                              # pid 文件存储路径
load_module       ${nginx_home}/modules/ngx_http_upload_module.so;             # 加载上传文件模块

events {
    worker_connections  1024;                                                  # worker 最大连接数
}


http {
    include                  mime.types;                                       # 
    # default_type           application/octet-stream;                         # 
    access_log               logs/access.log;                                  # 连接日志
    sendfile                 on;                                               # 开启高效文件传输模式
    tcp_nopush               on;                                               # 提升网络包的传输效率
    tcp_nodelay              on;                                               # 提高网络包传输的实时性
    keepalive_timeout        60;                                               # 默认保持连接时间
    gzip_static              on;                                               # 启用静态压缩功能
    gzip                     on;                                               # 开启动态压缩功能
    gzip_min_length          1k;                                               # 小于设置值的文件将不会被压缩
    gzip_comp_level          6;                                                # gzip 压缩级别 1-10
    # 进行压缩的文件类型
    gzip_types               text/plain text/log  text/html text/css text/javascript text/xml application/javascript application/x-javascript application/xml application/atom+xml application/rss+xml application/rtf application/json application/x-httpd-php application/xhtml+xml application/x-perl application/x-tcl  image/jpeg image/gif image/png image/webp image/x-icon image/tiff image/svg+xml font/woff font/woff2;
    gzip_vary                on;                                               # 是否在 http header 中添加 Vary: Accept-Encoding
    gzip_buffers             4 16k;                                            # 压缩的缓冲区数量和大小
    client_max_body_size     100M;                                             # 客户端最大体积
    client_body_buffer_size  128k;                                             # 客户端缓存大小
    autoindex                on;                                               # 开启目录文件列表        
    autoindex_exact_size     off;                                              # 显示出文件的确切大小，单位是 bytes
    autoindex_localtime      off;                                              # 显示的文件时间为文件的服务器时间
    charset                  utf-8;                                            # 避免中文乱码
    
    # 监听 web 
    server {
        listen       47722;                                                    # 监听端口
        server_name  ${server_name};                                                   # 监听主机名
        error_log   logs/web_error.log;                                        # 监听 Web 错误日志    
        access_log  logs/web_access.log;                                       # 监听 Web 连接日志    
        error_page   500 502 503 504  /50x.html;                               # 错误页面
        
        #  默认打开页面
        location / {
            root   data/html;
            index  index.html index.htm;
        }
        
        # 错误页面
        location = /50x.html {
            root   data/html;
        }
        
        # 浏览器查看日志
        location /logs {
            alias      logs;                                                   # 日志位置
            add_header Cache-Control no-store;                                 # 开启后，浏览器不会保存日志信息
        }
        
        # 文件上传页面
        location /upload {
            alias  data/upload;
            index  index.html index.html index.htm index.php;
        }
        
        # 开启上传功能
        location /save_file {
            upload_pass                @rename_file;                           # 开启上传模块            
            upload_resumable           on;                                     # 开启断点续传
            upload_store               data/file;                              # 上传文件存储路径
            upload_store_access        all:rw;                                 # 所有上传文件都可读写
            upload_cleanup             400 404 499 500-505;                    # 如果出现这些错误将删除保存的文件
            # upload_pass_form_field   "^submit$|^description$";               # 
            upload_pass_form_field     "^.*$";                                 # 表单参数
            upload_pass_args           on;                                     # 转发参数
            
            # 上传文件大小限制
            upload_set_form_field       "${upload_field_name}.name"         "$upload_file_name";        # 表单 name 值
            upload_set_form_field       "${upload_field_name}.content_type" "$upload_content_type";     # 上传文件的类型
            upload_set_form_field       "${upload_field_name}.path"         "$upload_tmp_path";         # 文件上传后保存在服务器上的地址
            upload_aggregate_form_field "${upload_field_name}.md5"          "$upload_field_name.md5";   # 文件 md5
            upload_aggregate_form_field "${upload_field_name}.size"         "$upload_file_size";        # 文件大小
        }
        
        # 保存上传的文件
        location @rename_file {
            proxy_pass http://${server_name}:47723;
        }
        
        # 开启下载功能
        location /download {
            alias data/file;
        }    
        
        # Hive 计划可视化
        location /hive {
            alias  data/hive;
            index  index.html;
         }
    }
    
    # 监听 job 服务
    server {
        listen       10800;                                                    # 监听端口
        server_name  ${server_name};                                                   # 监听主机名
        error_log    logs/job_error.log;                                       # 监听 Web 错误日志
        access_log   logs/job_access.log;                                      # 监听 Web 连接日志
        add_header   backendCode  $upstream_status;                            # 前端可以查看具体转向哪个节点
        add_header   BackendIP    "$upstream_addr;" always;
        
        # 端口代理转发
        location / {
            proxy_pass  http://job_server;
            index index.html index.htm;
        }
    }
    
    # job 服务实现负载均衡
    upstream job_server {
        # 代理端口连接时, 失败超时: 5s; 失败次数: 3
        server ${server_name}:10010 weight=1 max_fails=2 fail_timeout=2;
        server ${server_name}:10086 weight=5 max_fails=2 fail_timeout=2 backup;
    }    
}
